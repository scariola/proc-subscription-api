<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<sub-flow name="impl-redis-process-subflow"
		doc:id="3186b9cb-047f-4271-9069-b5142de8dfc9">
		<logger level="INFO" doc:name="START - Redis Process"
			doc:id="8785212a-2715-4645-9518-572a1776bc11"
			message="START - STEP 3: REDIS LOGIC (BRAND &amp; STATE LOOKUP)" />
		<try doc:name="Try" doc:id="f71b769b-db02-4ae8-a2d8-426da049ed92">
			<flow-ref doc:name="sys-get-brand-subflow"
				doc:id="bca513ea-5ccf-46b4-ae26-fef75c66dfe5"
				name="sys-get-brand-subflow" target="brandResponse" />
			<error-handler>
				<on-error-continue enableNotifications="true"
					logException="true" doc:name="On Error Continue"
					doc:id="f601eb2e-fe52-4c79-aef2-f62edc56698a">
					<logger level="INFO" doc:name="Logger"
						doc:id="9c95f29a-1751-44be-8d51-6b1d7b4b9998" />
				</on-error-continue>
			</error-handler>
		</try>
		<choice doc:name="IS BrandId found?"
			doc:id="5ae4d3cb-1041-498f-a556-d42cd77dca03">
			<when expression="#[isEmpty(vars.brandResponse.result)]">
				<flow-ref doc:name="sys-get-brige-api-subflow"
					doc:id="a1139099-63cd-4125-97ba-c8b15c4a6cef"
					name="sys-get-brige-api-subflow" target="bridgeResponse" />
				<flow-ref doc:name="sys-post-brand-subflow"
					doc:id="accd2fa4-5299-4ee3-af1e-f77a75b69c1e"
					name="sys-post-brand-subflow" />
			</when>
		</choice>
		<ee:transform doc:name="var-brand"
			doc:id="a6e5a8b8-6614-4a6e-a154-8a99397e13ea">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="brand"><![CDATA[%dw 2.0
output application/json

var redis = vars.brandResponse
var bridge = vars.bridgeResponse

var data = 
    if (!isEmpty(redis.result)) redis.result
    else bridge          
---
data
]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<choice doc:name="IS Brand Id Supported?"
			doc:id="c5043fb0-326f-47c0-8a1a-9f1ac4044234">
			<when
				expression='#[[1, 2, 3] contains (vars.brand."brand-id" default 0)]'>
				<flow-ref doc:name="sys-get-state-subflow"
					doc:id="bc5b0110-f84c-460a-b145-6e261d37780b"
					name="sys-get-state-subflow" target="stateResponse" />
				<choice doc:name="ROUTE request TO Screnarios"
					doc:id="92cae739-4cc2-4684-b1b9-4bfd2f23af4b">
					<when expression='#[vars.formattedSubscriberData.keyword == "OPT-IN"]'>
						<flow-ref doc:name="impl-process-opt-in-subflow"
							doc:id="7f6c8532-e477-482d-96b0-20e004dcf054"
							name="impl-process-opt-in-subflow" />
					</when>
					<when expression='#[vars.formattedSubscriberData.keyword == "OPT-OUT"]'>
						<flow-ref doc:name="impl-process-opt-out-subflow"
							doc:id="be512e07-919e-4628-9646-e57c23106de4"
							name="impl-process-opt-out-subflow" />
					</when>
					<otherwise>
						<flow-ref doc:name="impl-process-bonus-subflow"
							doc:id="c8aded14-95a2-440d-8225-28762471b555"
							name="impl-process-bonus-subflow" />
					</otherwise>
				</choice>
			</when>
			<otherwise>
				<ee:transform doc:name="var-spielTpye(unsupported)"
					doc:id="bb73a39c-9a82-4759-a4fa-f14c6f7a7b66">
					<ee:message>
					</ee:message>
					<ee:variables>
						<ee:set-variable variableName="spielType"><![CDATA[%dw 2.0
output application/json
---
'unsupported']]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<flow-ref doc:name="common-set-error-audit-log-subflow"
					doc:id="ae15638f-c4d8-44dd-97fd-91977340ce97"
					name="common-set-error-audit-log-subflow" />
			</otherwise>
		</choice>
		<logger level="INFO" doc:name="END - Redis Process"
			doc:id="c012ae8d-7a8f-4121-85ef-513cc24dcabf"
			message="END - STEP 3: REDIS LOGIC (BRAND &amp; STATE LOOKUP)" />
	</sub-flow>
	<sub-flow name="impl-process-bonus-subflow"
		doc:id="ad93a95c-9c49-4dd6-9722-a43a2f791b8a">
		<choice doc:name="Choice"
			doc:id="46977877-5241-42b2-9dbe-f67ebd1500c7">
			<when expression="#[vars.stateResponse.result.state == 1]">
				<ee:transform doc:name="var-spielType(dual bonus)"
					doc:id="fb36f046-080d-4968-97bb-c2267175a428">
					<ee:message />
					<ee:variables>
						<ee:set-variable variableName="spielType"><![CDATA[%dw 2.0
output application/json
---
'dual_bonus'
]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<flow-ref doc:name="common-set-success-audit-log-subflow"
					doc:id="bb4a4ace-5d9a-4d8b-8f86-c0443b069f58"
					name="common-set-success-audit-log-subflow" />
			</when>
			<when expression="#[vars.stateResponse.result.state == 0]">
				<ee:transform doc:name="var-spielType(not eligbale)"
					doc:id="f67f3c5f-4d1f-49b9-907d-69cbdde04f49">
					<ee:message />
					<ee:variables>
						<ee:set-variable variableName="spielType"><![CDATA[%dw 2.0
output application/json
---
'not-eligable'
]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<flow-ref doc:name="common-set-success-audit-log-subflow"
					doc:id="11d654ff-0249-4e21-ba3a-a3ac00ecb0cd"
					name="common-set-success-audit-log-subflow" />
			</when>
			<otherwise>
				<flow-ref doc:name="impl-get-whitelist-subflow"
					doc:id="d67c1822-b0ed-4cf3-ad8d-242d30028a06"
					name="impl-get-whitelist-subflow" />
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="impl-process-opt-out-subflow"
		doc:id="fd6efcb2-b71b-4eec-b515-eeb0eab30bb6">
		<choice doc:name="IS State found?"
			doc:id="65395059-2e83-4c02-9b5c-5aec103aa9be">
			<when expression="#[vars.stateResponse.result.state == 0]">
				<ee:transform doc:name="var-spielType(dual off)"
					doc:id="74a6d1ff-3a5e-4696-8ab7-a8e0d015d646">
					<ee:message />
					<ee:variables>
						<ee:set-variable variableName="spielType"><![CDATA[%dw 2.0
output application/json
---
'dual-off'
]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<flow-ref doc:name="common-set-success-audit-log-subflow"
					doc:id="66692241-4250-4cfd-a567-2d71c100e2ec"
					name="common-set-success-audit-log-subflow" />
			</when>
			<when expression="#[vars.stateResponse.result.state == 1]">
				<logger level="INFO" doc:name="Proceed to Deprovision flow"
					doc:id="6ad55833-3e35-4b10-a04a-f91f7a165e39"
					message="Proceed - STEP 5: FACEBOOK PROVISIONING/DEPROVISIONING" />
			</when>
			<otherwise>
				<ee:transform doc:name="var-spielType(not registered)"
					doc:id="9b977367-9436-4861-8d9b-d8d53681a57b">
					<ee:message />
					<ee:variables>
						<ee:set-variable variableName="spielType"><![CDATA[%dw 2.0
output application/json
---
'not-registered'
]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<flow-ref doc:name="common-set-success-audit-log-subflow"
					doc:id="e94fb3bd-9053-44e6-90b0-01cd9a13e3d0"
					name="common-set-success-audit-log-subflow" />
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="impl-process-opt-in-subflow"
		doc:id="205e5447-9a8a-4772-9e83-6e372c86ad99">
		<choice doc:name="IS State found?"
			doc:id="4b2095ca-858c-4505-a7fd-f624563a788e">
			<when expression="#[vars.stateResponse.result.state == 1]">
				<ee:transform doc:name="var-spielType(dual provision)"
					doc:id="114f67ff-f290-4c62-bd6e-de1f481b9113">
					<ee:message />
					<ee:variables>
						<ee:set-variable variableName="spielType"><![CDATA[%dw 2.0
output application/json
---
'dual-provisioning'
]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<flow-ref doc:name="common-set-success-audit-log-subflow"
					doc:id="9915d484-143c-40b8-bff6-954a1895b5ed"
					name="common-set-success-audit-log-subflow" />
			</when>
			<otherwise>
				<logger level="INFO" doc:name="Proceed to Eligibility check"
					doc:id="417d8533-fc57-49ed-b218-13b133e2df90" />
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="impl-post-state-subflow"
		doc:id="bedc37e1-9fa6-4f23-a04e-d17572881160">
		<logger level="INFO" doc:name="START - Save State"
			doc:id="a893d5aa-f758-4cb3-947d-8d981095d0df"
			message="START - Save State - STEP 6: UPDATE REDIS STATE" />
		<ee:transform doc:name="Payload to Redis API Request"
			doc:id="469f1316-c0a3-4bb5-84e7-e30a9ddfeb6b">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json skipNullOn = "everywhere"
---
{
	"msisdn": vars.formattedSubscriberData.msisdn,
	"requestPayload":{
		"state": vars.state.state,
		"expiry-date": vars.expiryDetails.'expiry-date'
	}
	
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<until-successful maxRetries="3"
			doc:name="Until 
			Successful"
			doc:id="2cb2c6e3-a6a1-461c-8a55-ed8199314643"
			millisBetweenRetries="50000">
			<try doc:name="Try" doc:id="ee8efeb8-b266-4f83-ae8b-05b6ea54238e">
				<flow-ref doc:name="sys-post-state-subflow"
					doc:id="8aaf0d4a-4a4e-49b2-95b6-fc97bc290004"
					name="sys-post-state-subflow" />
				<error-handler>
					<on-error-continue enableNotifications="true"
						logException="true" doc:name="On Error Continue"
						doc:id="61905c3c-bda0-4179-a883-875989de7086" type="ANY">
						<logger level="INFO" doc:name="Logger"
							doc:id="da9475d5-53c1-4801-b76c-7a4d55fa0a33" />
					</on-error-continue>
				</error-handler>
			</try>
			<choice doc:name="Choice"
				doc:id="e1b496f9-5763-4cce-b8b6-75ff680eceea">
				<when expression="#[attributes.statusCode != 201]">
					<logger level="INFO" doc:name="Logger"
						doc:id="1e639d31-0b53-40a4-a47c-1e9c0b0e5866"
						message='#[{&#10;  "step": "6 - Cache Save",&#10;  //"transactionId;" "idss",&#10;  "msisdn": "63xxxxxxxxxx",&#10;  "request_type": "Opt-In / Opt-Out / Bonus",&#10;  "cache_key": "spectre-freefb-63xxxxxxxxxx",&#10;  "cache_value": "1 or 0",&#10;  "attempt": 3,&#10;  "status": "failure",&#10;  "error": "Connection timeout / Write error / null",&#10;  "timestamp": "2025-05-30T10:30:15Z"&#10;}]' />
				</when>
			</choice>
		</until-successful>
		<logger level="INFO" doc:name="END - Save State"
			doc:id="9ed61ad4-189b-4169-8e5c-f2a744e1bcba"
			message="END - Save State - STEP 6: UPDATE REDIS STATE" />
	</sub-flow>
</mule>
